var https = require('https'),
    qs = require('querystring'),
    apihost = 'circonus.com',
    apiport = 443,
    apipath = '/api/json/',
    authtoken = null,
    appname = null;

exports.setup = function (token, app) {
  authtoken = token;
  appname = app;
};

exports.request = function(method, endpoint, callback, data, retry) {
  var options = {
        host: apihost,
        port: apiport,
        path: apipath + endpoint,
        method: method.toUpperCase(),
        agent: false,
        headers: {
          "X-Circonus-Auth-Token": authtoken,
          "X-Circonus-App-Name": appname
        },
      },
      req_data = null,
      me = this;

  if ( typeof(retry) === 'undefined' ) retry = 0;

  if ( typeof(data) !== 'undefined' && Object.keys(data).length !== 0 ) {
    req_data = qs.stringify(data);
    if ( method.toUpperCase() === 'POST' ) {
      options.headers['Content-Type'] = 'application/x-www-form-urlencoded';
      options.headers['Content-Length'] = req_data.length
    }
    else if ( method.toUpperCase() === 'GET' ) {
      options.path += '?' + req_data;
    }
  }

  var req = https.request(options, function(res) {
    res.on('data', function(chunk) {
      callback(null, chunk);
    });
  });

  req.on('error', function(e) {
    if ( e.code === 'ECONNRESET' && retry < 10 ) {
      // sleep 1 second and try again, probably hit the rate limit
      setTimeout(function() {
        me.request(method, endpoint, callback, data, retry+1);
      }, 1000 * (retry+1));
    }
    else {
      callback(e.message, null);
    }
  });

  if ( method.toUpperCase() === 'POST' ) {
    req.write(req_data);
  }
  req.end();
};
